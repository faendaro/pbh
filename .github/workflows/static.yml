# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Flutter SDK
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.7.0'  # You can specify the desired Flutter version here
      
      # Step 3: Cache Flutter dependencies (optional but recommended)
      - name: Cache Flutter dependencies
        uses: actions/cache@v3
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-flutter-

      # Step 4: Install dependencies
      - name: Install dependencies
        run: flutter pub get

      # Step 5: Build the Flutter web app
      - name: Build Flutter web app
        run: flutter build web

      # Step 6: Setup GitHub Pages for deployment
      - name: Setup Pages
        uses: actions/configure-pages@v5

      # Step 7: Upload the build/web directory to GitHub Pages
      - name: Upload build/web directory
        uses: actions/upload-pages-artifact@v3
        with:
          path: './build/web'

      # Step 8: Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      # Optional Step 9: Check the deployment status (this is just to ensure it was successful)
      - name: Check deployment status
        run: |
          curl -f -s -I https://${{ steps.deployment.outputs.page_url }} || exit 1
